//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MISEventManagement.Models.EntityModel
{
    using System;
    using System.Collections.Generic;
    
    public partial class Event
    {
        public Event()
        {
            this.Comments = new HashSet<Comment>();
            this.Hosts = new HashSet<Host>();
            this.Inviteds = new HashSet<Invited>();
            this.Reviews = new HashSet<Review>();
            this.TagRels = new HashSet<TagRel>();
            this.UserResponseToEvents = new HashSet<UserResponseToEvent>();
        }
    
        public long EventID { get; set; }
        public string EventName { get; set; }
        public System.DateTime CreatedDate { get; set; }
        public System.DateTime HappeningDate { get; set; }
        public long GuestsLimit { get; set; }
        public bool IsHappening { get; set; }
        public bool IsHappened { get; set; }
        public long GuestsShowedUp { get; set; }
        public long GuestsWantsToCome { get; set; }
        public bool IsSuccess { get; set; }
        public string EventDescription { get; set; }
        public string EventDescription2 { get; set; }
        public System.Guid UploadGuid { get; set; }
        public bool IsVeryClose { get; set; }
        public byte NotifyUsersCount { get; set; }
        public long CreatedByUserID { get; set; }
        public double AvgRating { get; set; }
        public long FollowingCount { get; set; }
        public long LikedCount { get; set; }
        public long DisLikedCount { get; set; }
        public byte EventTypeID { get; set; }
        public bool IsFollowUpEvent { get; set; }
        public short EventSeriesNumber { get; set; }
        public Nullable<long> PreviousEventID { get; set; }
        public string NextFollowUpEventName { get; set; }
        public long VenuID { get; set; }
    
        public virtual ICollection<Comment> Comments { get; set; }
        public virtual EventType EventType { get; set; }
        public virtual User User { get; set; }
        public virtual Venu Venu { get; set; }
        public virtual ICollection<Host> Hosts { get; set; }
        public virtual ICollection<Invited> Inviteds { get; set; }
        public virtual ICollection<Review> Reviews { get; set; }
        public virtual ICollection<TagRel> TagRels { get; set; }
        public virtual ICollection<UserResponseToEvent> UserResponseToEvents { get; set; }
    }
}
